{"ast":null,"code":"var _jsxFileName = \"C:\\\\\\u0420\\u0410\\u0411\\u041E\\u0422\\u0410\\\\\\u0421\\u0430\\u0439\\u0442 \\u0421\\u0431\\u0435\\u0440\\u041E\\u0420\\u041C \\u2014 Cline\\\\frontend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './index.css';\n\n// Определяем интерфейсы для наших данных\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// Функция для округления числовых значений\nconst roundMetricValue = value => {\n  if (value < 1) {\n    // Для значений меньше 1 оставляем одну цифру после запятой\n    return Math.round(value * 10) / 10;\n  }\n  // Для остальных значений округляем до целых\n  return Math.round(value);\n};\n\n// Функция для форматирования значений\nconst formatValue = value => {\n  console.log('Formatting value:', value);\n  if (value === null || value === undefined || value === '') {\n    console.log('Value is empty, returning \"Нет данных\"');\n    return 'Нет данных';\n  }\n  if (typeof value === 'number') {\n    return String(roundMetricValue(value));\n  }\n  console.log('Returning formatted value:', value);\n  return String(value);\n};\n\n// Компонент поиска процессов\nconst ProcessSearch = ({\n  onSearch\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-container\",\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\u041F\\u043E\\u0438\\u0441\\u043A \\u043F\\u043E \\u043D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u044E \\u0438\\u043B\\u0438 \\u043A\\u043E\\u0434\\u0443 \\u043F\\u0440\\u043E\\u0446\\u0435\\u0441\\u0441\\u0430...\",\n      onChange: e => onSearch(e.target.value),\n      className: \"search-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n\n// Функция для определения максимального значения шкалы\n_c = ProcessSearch;\nconst getTimelineMaxHours = (rto, mtpd, tr) => {\n  const maxValue = Math.max(rto, mtpd, tr);\n  if (maxValue <= 1) return 1;\n  if (maxValue <= 2) return 2;\n  if (maxValue <= 4) return 4;\n  if (maxValue <= 8) return 8;\n  return 24;\n};\n\n// Компонент визуализации временных метрик\nconst TimeMetricsVisualizer = ({\n  rto,\n  mtpd,\n  tr\n}) => {\n  const maxHours = getTimelineMaxHours(rto, mtpd, tr);\n\n  // Функция для генерации делений шкалы\n  const getTimelineLabels = maxHours => {\n    if (maxHours <= 1) return [0, 0.2, 0.4, 0.6, 0.8, 1];\n    if (maxHours <= 2) return [0, 0.5, 1, 1.5, 2];\n    if (maxHours <= 4) return [0, 1, 2, 3, 4];\n    if (maxHours <= 8) return [0, 2, 4, 6, 8];\n    return [0, 4, 8, 12, 16, 24];\n  };\n  const timeLabels = getTimelineLabels(maxHours);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"time-metrics-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"metrics-timeline\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timeline-labels\",\n        children: timeLabels.map((hours, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [hours, \"\\u0447\"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timeline-grid\",\n        children: timeLabels.map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid-line\",\n          style: {\n            left: `${index / (timeLabels.length - 1) * 100}%`\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timeline-metrics\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric rto\",\n          style: {\n            left: `${Math.min(rto / maxHours * 100, 100)}%`\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric-line\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric-label\",\n            children: [\"RTO \", rto < 1 ? rto.toFixed(1) : Math.round(rto), \"\\u0447\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric mtpd\",\n          style: {\n            left: `${Math.min(mtpd / maxHours * 100, 100)}%`\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric-line\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric-label\",\n            children: [\"MTPD \", mtpd < 1 ? mtpd.toFixed(1) : Math.round(mtpd), \"\\u0447\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric tr\",\n          style: {\n            left: `${Math.min(tr / maxHours * 100, 100)}%`\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric-line\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric-label\",\n            children: [\"TR \", tr < 1 ? tr.toFixed(1) : Math.round(tr), \"\\u0447\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n\n// Компонент мультиселект фильтра\n_c2 = TimeMetricsVisualizer;\nconst MultiSelectFilter = ({\n  column,\n  values,\n  selectedValues,\n  onChange\n}) => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const getDisplayName = column => {\n    const names = {\n      impact_type: 'Тип влияния',\n      rto_hours: 'RTO процесса',\n      mtpd: 'MTPD процесса',\n      tr: 'TR',\n      risk_assessment_explanation: 'Автопояснение'\n    };\n    return names[column] || column;\n  };\n  const toggleValue = value => {\n    const newValues = selectedValues.includes(value) ? selectedValues.filter(v => v !== value) : [...selectedValues, value];\n    onChange(column, newValues);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"multiselect-filter\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"multiselect-header\",\n      onClick: () => setIsOpen(!isOpen),\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: getDisplayName(column)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"selected-count\",\n        children: selectedValues.length ? `Выбрано: ${selectedValues.length}` : 'Все'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"multiselect-options\",\n      children: values.map(value => /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"option-label\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: selectedValues.includes(value),\n          onChange: () => toggleValue(value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: formatValue(value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 15\n        }, this)]\n      }, value, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n};\n\n// Компонент для отображения базовой информации о риске\n_s(MultiSelectFilter, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c3 = MultiSelectFilter;\nconst RiskDetails = ({\n  riskDetails\n}) => {\n  console.log('RiskDetails component received:', riskDetails);\n  if (!riskDetails) {\n    console.log('No risk details data available');\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u041D\\u0435\\u0442 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \\u0434\\u043B\\u044F \\u043E\\u0442\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u044F.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"risk-details\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u0411\\u0430\\u0437\\u043E\\u0432\\u0430\\u044F \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"risk-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u0432\\u044B\\u0441\\u043E\\u043A\\u0438\\u0445 \\u0440\\u0438\\u0441\\u043A\\u043E\\u0432:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 12\n        }, this), \" \", formatValue(riskDetails.high_risk_count)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\u041E\\u0431\\u0449\\u0435\\u0435 \\u043A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u0440\\u0438\\u0441\\u043A\\u043E\\u0432:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 12\n        }, this), \" \", formatValue(riskDetails.total_risk_count)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\u0420\\u0435\\u0439\\u0442\\u0438\\u043D\\u0433 \\u043F\\u0440\\u043E\\u0446\\u0435\\u0441\\u0441\\u0430 \\u0434\\u043B\\u044F \\u0443\\u0433\\u0440\\u043E\\u0437\\u044B:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 12\n        }, this), \" \", formatValue(riskDetails.process_threat_rating)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 237,\n    columnNumber: 5\n  }, this);\n};\n\n// Компонент для отображения детального отчета\n_c4 = RiskDetails;\nconst DetailedRisks = ({\n  detailedRisks\n}) => {\n  console.log('DetailedRisks component received:', detailedRisks);\n  if (!detailedRisks || detailedRisks.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\u041D\\u0435\\u0442 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \\u0434\\u043B\\u044F \\u043E\\u0442\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u044F.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Функция для определения цвета ячейки в зависимости от статуса резервирования\n  const getReservationColor = asReserved => {\n    if (!asReserved) return '#6c757d'; // серый для неизвестного статуса\n    const status = asReserved.toLowerCase();\n    if (status === 'да') return '#28a745'; // зеленый для зарезервированных\n    if (status === 'нет') return '#dc3545'; // красный для незарезервированных\n    return '#6c757d'; // серый для всех остальных случаев\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"detailed-risks\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u0414\\u0435\\u0442\\u0430\\u043B\\u044C\\u043D\\u044B\\u0439 \\u043E\\u0442\\u0447\\u0435\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"risks-table\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u0422\\u0438\\u043F \\u0432\\u043B\\u0438\\u044F\\u043D\\u0438\\u044F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u0412\\u0440\\u0435\\u043C\\u0435\\u043D\\u043D\\u044B\\u0435 \\u043C\\u0435\\u0442\\u0440\\u0438\\u043A\\u0438\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u0412\\u0438\\u0437\\u0443\\u0430\\u043B\\u0438\\u0437\\u0430\\u0446\\u0438\\u044F \\u043C\\u0435\\u0442\\u0440\\u0438\\u043A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u0410\\u0432\\u0442\\u043E\\u043F\\u043E\\u044F\\u0441\\u043D\\u0435\\u043D\\u0438\\u0435\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: detailedRisks.map((risk, index) => {\n            var _risk$as_reserved_in_;\n            // Преобразуем строковые значения в числа для временных метрик\n            const rtoHours = roundMetricValue(parseFloat(risk.rto_hours || '0'));\n            const mtpdHours = roundMetricValue(parseFloat(risk.mtpd || '0'));\n            const trHours = roundMetricValue(parseFloat(risk.tr || '0'));\n            const hasValidTimeMetrics = !isNaN(rtoHours) && !isNaN(mtpdHours) && !isNaN(trHours);\n            const reservationColor = getReservationColor(risk.as_reserved_in_rcod);\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatValue(risk.impact_type)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"metrics-values\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"metrics-container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"reservation-indicator\",\n                    style: {\n                      backgroundColor: reservationColor\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 293,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"metrics-content\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"reservation-status\",\n                      children: [\"\\u0410\\u0421 \", ((_risk$as_reserved_in_ = risk.as_reserved_in_rcod) === null || _risk$as_reserved_in_ === void 0 ? void 0 : _risk$as_reserved_in_.toLowerCase()) === 'да' ? 'зарезервирована' : 'не зарезервирована', \" \\u0432 \\u0420\\u0426\\u041E\\u0414\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 298,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"metrics-list\",\n                      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                          children: \"TR:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 302,\n                          columnNumber: 30\n                        }, this), \" \", formatValue(trHours)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 302,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                          children: \"RTO:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 303,\n                          columnNumber: 30\n                        }, this), \" \", formatValue(rtoHours)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 303,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                          children: \"MTPD:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 304,\n                          columnNumber: 30\n                        }, this), \" \", formatValue(mtpdHours)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 304,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 301,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 297,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"metrics-cell\",\n                children: hasValidTimeMetrics && /*#__PURE__*/_jsxDEV(TimeMetricsVisualizer, {\n                  rto: rtoHours,\n                  mtpd: mtpdHours,\n                  tr: trHours\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: formatValue(risk.risk_assessment_explanation)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 266,\n    columnNumber: 5\n  }, this);\n};\n\n// Основное приложение\n_c5 = DetailedRisks;\nfunction App() {\n  _s2();\n  const [processes, setProcesses] = useState([]);\n  const [filteredProcesses, setFilteredProcesses] = useState([]);\n  const [selectedProcess, setSelectedProcess] = useState(null);\n  const [threats, setThreats] = useState([]);\n  const [selectedThreat, setSelectedThreat] = useState(null);\n  const [selectedThreatDetails, setSelectedThreatDetails] = useState(null);\n  const [detailedRisks, setDetailedRisks] = useState([]);\n  const [error, setError] = useState(null);\n\n  // Загрузка списка процессов при старте\n  useEffect(() => {\n    fetch('http://localhost:8000/processes').then(response => response.json()).then(data => {\n      setProcesses(data);\n      setFilteredProcesses(data);\n    }).catch(err => setError('Не удалось загрузить список процессов.'));\n  }, []);\n\n  // Функция поиска по процессам\n  const handleProcessSearch = query => {\n    const lowercaseQuery = query.toLowerCase();\n    const filtered = processes.filter(process => process.name.toLowerCase().includes(lowercaseQuery) || process.sid.toLowerCase().includes(lowercaseQuery));\n    setFilteredProcesses(filtered);\n  };\n\n  // Загрузка угроз при выборе процесса\n  useEffect(() => {\n    // Очищаем состояние при смене процесса\n    setThreats([]);\n    setSelectedThreat(null);\n    setSelectedThreatDetails(null);\n    setDetailedRisks([]);\n    setError(null);\n    if (selectedProcess) {\n      fetch(`http://localhost:8000/threats/${selectedProcess.sid}`).then(response => response.json()).then(data => {\n        console.log('Received threats:', data);\n        setThreats(data || []); // Убедимся, что threats всегда массив\n      }).catch(err => {\n        console.error('Error loading threats:', err);\n        setError('Не удалось загрузить угрозы для процесса.');\n      });\n    }\n  }, [selectedProcess]);\n\n  // Загрузка деталей при выборе угрозы\n  useEffect(() => {\n    if (selectedThreat) {\n      console.log('Loading details for threat:', selectedThreat);\n      setError(null);\n\n      // Загружаем детали риска\n      fetch(`http://localhost:8000/risk-details/${selectedThreat.process_sid}?threat_type=${encodeURIComponent(selectedThreat.type)}&threat_scenario=${encodeURIComponent(selectedThreat.scenario)}`).then(res => {\n        if (!res.ok) throw new Error('Базовая информация не найдена.');\n        return res.json();\n      }).then(data => {\n        console.log('Received risk details:', data);\n        setSelectedThreatDetails(data);\n      }).catch(err => {\n        console.error('Error loading risk details:', err);\n        setError(err.message);\n        setSelectedThreatDetails(null);\n      });\n\n      // Загружаем детальный отчет\n      fetch(`http://localhost:8000/detailed-risk-report/${selectedThreat.process_sid}?threat_type=${encodeURIComponent(selectedThreat.type)}&threat_scenario=${encodeURIComponent(selectedThreat.scenario)}`).then(res => {\n        if (!res.ok) throw new Error('Детальный отчет не найден.');\n        return res.json();\n      }).then(data => {\n        console.log('Received detailed risks:', data);\n        setDetailedRisks(Array.isArray(data) ? data : [data]); // Убедимся, что detailedRisks всегда массив\n      }).catch(err => {\n        console.error('Error loading detailed risks:', err);\n        setError(err.message);\n        setDetailedRisks([]);\n      });\n    }\n  }, [selectedThreat]);\n\n  // Debug: log detailedRisks data to verify data presence\n  useEffect(() => {\n    console.log('Detailed Risks data:', detailedRisks);\n  }, [detailedRisks]);\n  const getRiskColor = level => {\n    if (!level) return '#6c757d'; // Возвращаем серый цвет для undefined/null значений\n\n    const l = level.toLowerCase();\n    if (l.includes('критический')) return '#dc3545';\n    if (l.includes('высокий')) return '#ffc107';\n    if (l.includes('средний')) return '#fd7e14';\n    if (l.includes('низкий')) return '#28a745';\n    return '#6c757d';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u041F\\u0440\\u043E\\u0446\\u0435\\u0441\\u0441\\u044B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProcessSearch, {\n        onSearch: handleProcessSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"process-list\",\n        children: filteredProcesses.map(p => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `process-item ${(selectedProcess === null || selectedProcess === void 0 ? void 0 : selectedProcess.sid) === p.sid ? 'selected' : ''}`,\n          onClick: () => setSelectedProcess(p),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"process-name\",\n            children: p.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"process-sid\",\n            children: p.sid\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 15\n          }, this)]\n        }, p.sid, true, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: selectedProcess ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"\\u0423\\u0433\\u0440\\u043E\\u0437\\u044B \\u0434\\u043B\\u044F: \", selectedProcess.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"threats-container\",\n          children: threats.map(threat => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `threat-card ${(selectedThreat === null || selectedThreat === void 0 ? void 0 : selectedThreat.process_sid) === threat.process_sid && (selectedThreat === null || selectedThreat === void 0 ? void 0 : selectedThreat.type) === threat.type && (selectedThreat === null || selectedThreat === void 0 ? void 0 : selectedThreat.scenario) === threat.scenario ? 'selected' : ''}`,\n            onClick: () => setSelectedThreat(threat),\n            style: {\n              borderLeft: `5px solid ${getRiskColor(threat.integral_risk_level)}`,\n              backgroundColor: '#fff'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"threat-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: threat.type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 480,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"threat-rating\",\n                style: {\n                  backgroundColor: threat.threat_rating_color || getRiskColor(threat.threat_rating)\n                },\n                children: threat.threat_rating || 'Нет данных'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"threat-scenario\",\n              children: threat.scenario\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"threat-risks\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"risk-item integral-risk\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"\\u0418\\u043D\\u0442\\u0435\\u0433\\u0440\\u0430\\u043B\\u044C\\u043D\\u044B\\u0439 \\u0440\\u0438\\u0441\\u043A:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 490,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    color: getRiskColor(threat.integral_risk_level),\n                    fontWeight: 'bold'\n                  },\n                  children: formatValue(threat.integral_risk_level)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 491,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 489,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"risk-item highest-risk\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"\\u0423\\u0440\\u043E\\u0432\\u0435\\u043D\\u044C \\u043D\\u0430\\u0438\\u0431\\u043E\\u043B\\u0435\\u0435 \\u0432\\u044B\\u0441\\u043E\\u043A\\u043E\\u0433\\u043E \\u0440\\u0438\\u0441\\u043A\\u0430:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 499,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    color: getRiskColor(threat.highest_risk_level)\n                  },\n                  children: formatValue(threat.highest_risk_level)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 500,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 498,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 19\n            }, this)]\n          }, `${threat.process_sid}-${threat.type}-${threat.scenario}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 13\n        }, this), selectedThreat && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"details-container\",\n          children: error ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(RiskDetails, {\n              riskDetails: selectedThreatDetails\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(DetailedRisks, {\n              detailedRisks: detailedRisks\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"placeholder\",\n        children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043F\\u0440\\u043E\\u0446\\u0435\\u0441\\u0441 \\u0434\\u043B\\u044F \\u043F\\u0440\\u043E\\u0441\\u043C\\u043E\\u0442\\u0440\\u0430 \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u0438.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 442,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"cGsSJLMCG14G4R1toYmYoUn1yNk=\");\n_c6 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"ProcessSearch\");\n$RefreshReg$(_c2, \"TimeMetricsVisualizer\");\n$RefreshReg$(_c3, \"MultiSelectFilter\");\n$RefreshReg$(_c4, \"RiskDetails\");\n$RefreshReg$(_c5, \"DetailedRisks\");\n$RefreshReg$(_c6, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","roundMetricValue","value","Math","round","formatValue","console","log","undefined","String","ProcessSearch","onSearch","className","children","type","placeholder","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","getTimelineMaxHours","rto","mtpd","tr","maxValue","max","TimeMetricsVisualizer","maxHours","getTimelineLabels","timeLabels","map","hours","index","_","style","left","length","min","toFixed","_c2","MultiSelectFilter","column","values","selectedValues","_s","isOpen","setIsOpen","getDisplayName","names","impact_type","rto_hours","risk_assessment_explanation","toggleValue","newValues","includes","filter","v","onClick","checked","_c3","RiskDetails","riskDetails","high_risk_count","total_risk_count","process_threat_rating","_c4","DetailedRisks","detailedRisks","getReservationColor","asReserved","status","toLowerCase","risk","_risk$as_reserved_in_","rtoHours","parseFloat","mtpdHours","trHours","hasValidTimeMetrics","isNaN","reservationColor","as_reserved_in_rcod","backgroundColor","_c5","App","_s2","processes","setProcesses","filteredProcesses","setFilteredProcesses","selectedProcess","setSelectedProcess","threats","setThreats","selectedThreat","setSelectedThreat","selectedThreatDetails","setSelectedThreatDetails","setDetailedRisks","error","setError","fetch","then","response","json","data","catch","err","handleProcessSearch","query","lowercaseQuery","filtered","process","name","sid","process_sid","encodeURIComponent","scenario","res","ok","Error","message","Array","isArray","getRiskColor","level","l","p","threat","borderLeft","integral_risk_level","threat_rating_color","threat_rating","color","fontWeight","highest_risk_level","_c6","$RefreshReg$"],"sources":["C:/РАБОТА/Сайт СберОРМ — Cline/frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './index.css';\r\n\r\n// Определяем интерфейсы для наших данных\r\ninterface Process {\r\n  id: number;\r\n  sid: string;\r\n  name: string;\r\n  risk_label: string;\r\n  owner_block: string;\r\n  department: string;\r\n  rating: number;\r\n}\r\n\r\ninterface Threat {\r\n  id: number;\r\n  type: string;\r\n  scenario: string;\r\n  integral_risk_level: string;\r\n  highest_risk_level: string;\r\n  process_sid: string;\r\n  threat_rating: string;\r\n  threat_rating_color: string;\r\n}\r\n\r\ninterface RiskDetail {\r\n  id: number;\r\n  as_reserved_in_rcod: string;\r\n  risk_label: string;\r\n  rto_hours: string;\r\n  mtpd: string;\r\n  tr: string;\r\n  high_risk_count?: number | string;\r\n  total_risk_count?: number | string;\r\n  process_threat_rating?: string;\r\n}\r\n\r\ninterface DetailedRiskReport {\r\n  id: number;\r\n  process: string;\r\n  process_sid: string;\r\n  threat_type: string;\r\n  threat_scenario: string;\r\n  impact_type: string;\r\n  risk_subcategory: string;\r\n  risk_group: string;\r\n  risk_subgroup: string;\r\n  integral_risk: string;\r\n  operational_risk: string;\r\n  reputational_risk: string;\r\n  regulatory_risk: string;\r\n  financial_risk: string;\r\n  impact_assessment: string;\r\n  probability_assessment: string;\r\n  control_assessment: string;\r\n  risk_level: string;\r\n  rto_hours: string;\r\n  mtpd: string;\r\n  tr: string;\r\n  risk_assessment_explanation: string;\r\n  as_reserved_in_rcod: string;\r\n}\r\n\r\ninterface FilterState {\r\n  impact_type: string[];\r\n  rto_hours: string[];\r\n  mtpd: string[];\r\n  tr: string[];\r\n  risk_assessment_explanation: string[];\r\n}\r\n\r\n// Функция для округления числовых значений\r\nconst roundMetricValue = (value: number): number => {\r\n  if (value < 1) {\r\n    // Для значений меньше 1 оставляем одну цифру после запятой\r\n    return Math.round(value * 10) / 10;\r\n  }\r\n  // Для остальных значений округляем до целых\r\n  return Math.round(value);\r\n};\r\n\r\n// Функция для форматирования значений\r\nconst formatValue = (value: string | number | null | undefined) => {\r\n  console.log('Formatting value:', value);\r\n  if (value === null || value === undefined || value === '') {\r\n    console.log('Value is empty, returning \"Нет данных\"');\r\n    return 'Нет данных';\r\n  }\r\n  if (typeof value === 'number') {\r\n    return String(roundMetricValue(value));\r\n  }\r\n  console.log('Returning formatted value:', value);\r\n  return String(value);\r\n};\r\n\r\n// Компонент поиска процессов\r\nconst ProcessSearch: React.FC<{ onSearch: (query: string) => void }> = ({ onSearch }) => {\r\n  return (\r\n    <div className=\"search-container\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Поиск по названию или коду процесса...\"\r\n        onChange={(e) => onSearch(e.target.value)}\r\n        className=\"search-input\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\n// Функция для определения максимального значения шкалы\r\nconst getTimelineMaxHours = (rto: number, mtpd: number, tr: number): number => {\r\n  const maxValue = Math.max(rto, mtpd, tr);\r\n  if (maxValue <= 1) return 1;\r\n  if (maxValue <= 2) return 2;\r\n  if (maxValue <= 4) return 4;\r\n  if (maxValue <= 8) return 8;\r\n  return 24;\r\n};\r\n\r\n// Компонент визуализации временных метрик\r\nconst TimeMetricsVisualizer: React.FC<{\r\n  rto: number;\r\n  mtpd: number;\r\n  tr: number;\r\n}> = ({ rto, mtpd, tr }) => {\r\n  const maxHours = getTimelineMaxHours(rto, mtpd, tr);\r\n  \r\n  // Функция для генерации делений шкалы\r\n  const getTimelineLabels = (maxHours: number): number[] => {\r\n    if (maxHours <= 1) return [0, 0.2, 0.4, 0.6, 0.8, 1];\r\n    if (maxHours <= 2) return [0, 0.5, 1, 1.5, 2];\r\n    if (maxHours <= 4) return [0, 1, 2, 3, 4];\r\n    if (maxHours <= 8) return [0, 2, 4, 6, 8];\r\n    return [0, 4, 8, 12, 16, 24];\r\n  };\r\n\r\n  const timeLabels = getTimelineLabels(maxHours);\r\n\r\n  return (\r\n    <div className=\"time-metrics-container\">\r\n      <div className=\"metrics-timeline\">\r\n        <div className=\"timeline-labels\">\r\n          {timeLabels.map((hours, index) => (\r\n            <div key={index}>{hours}ч</div>\r\n          ))}\r\n        </div>\r\n        <div className=\"timeline-grid\">\r\n          {timeLabels.map((_, index) => (\r\n            <div key={index} className=\"grid-line\" style={{ left: `${(index / (timeLabels.length - 1)) * 100}%` }}></div>\r\n          ))}\r\n        </div>\r\n        <div className=\"timeline-metrics\">\r\n          <div className=\"metric rto\" style={{ left: `${Math.min((rto / maxHours) * 100, 100)}%` }}>\r\n            <div className=\"metric-line\"></div>\r\n            <div className=\"metric-label\">RTO {rto < 1 ? rto.toFixed(1) : Math.round(rto)}ч</div>\r\n          </div>\r\n          <div className=\"metric mtpd\" style={{ left: `${Math.min((mtpd / maxHours) * 100, 100)}%` }}>\r\n            <div className=\"metric-line\"></div>\r\n            <div className=\"metric-label\">MTPD {mtpd < 1 ? mtpd.toFixed(1) : Math.round(mtpd)}ч</div>\r\n          </div>\r\n          <div className=\"metric tr\" style={{ left: `${Math.min((tr / maxHours) * 100, 100)}%` }}>\r\n            <div className=\"metric-line\"></div>\r\n            <div className=\"metric-label\">TR {tr < 1 ? tr.toFixed(1) : Math.round(tr)}ч</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Компонент мультиселект фильтра\r\nconst MultiSelectFilter: React.FC<{\r\n  column: keyof FilterState;\r\n  values: string[];\r\n  selectedValues: string[];\r\n  onChange: (column: keyof FilterState, values: string[]) => void;\r\n}> = ({ column, values, selectedValues, onChange }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const getDisplayName = (column: string) => {\r\n    const names: { [key: string]: string } = {\r\n      impact_type: 'Тип влияния',\r\n      rto_hours: 'RTO процесса',\r\n      mtpd: 'MTPD процесса',\r\n      tr: 'TR',\r\n      risk_assessment_explanation: 'Автопояснение'\r\n    };\r\n    return names[column] || column;\r\n  };\r\n\r\n  const toggleValue = (value: string) => {\r\n    const newValues = selectedValues.includes(value)\r\n      ? selectedValues.filter(v => v !== value)\r\n      : [...selectedValues, value];\r\n    onChange(column, newValues);\r\n  };\r\n\r\n  return (\r\n    <div className=\"multiselect-filter\">\r\n      <div \r\n        className=\"multiselect-header\" \r\n        onClick={() => setIsOpen(!isOpen)}\r\n      >\r\n        <span>{getDisplayName(column)}</span>\r\n        <span className=\"selected-count\">\r\n          {selectedValues.length ? `Выбрано: ${selectedValues.length}` : 'Все'}\r\n        </span>\r\n      </div>\r\n      {isOpen && (\r\n        <div className=\"multiselect-options\">\r\n          {values.map(value => (\r\n            <label key={value} className=\"option-label\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={selectedValues.includes(value)}\r\n                onChange={() => toggleValue(value)}\r\n              />\r\n              <span>{formatValue(value)}</span>\r\n            </label>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Компонент для отображения базовой информации о риске\r\nconst RiskDetails: React.FC<{ riskDetails: RiskDetail | null }> = ({ riskDetails }) => {\r\n  console.log('RiskDetails component received:', riskDetails);\r\n\r\n  if (!riskDetails) {\r\n    console.log('No risk details data available');\r\n    return <div>Нет данных для отображения.</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"risk-details\">\r\n      <h3>Базовая информация</h3>\r\n      <div className=\"risk-info\">\r\n        <p><strong>Количество высоких рисков:</strong> {formatValue(riskDetails.high_risk_count)}</p>\r\n        <p><strong>Общее количество рисков:</strong> {formatValue(riskDetails.total_risk_count)}</p>\r\n        <p><strong>Рейтинг процесса для угрозы:</strong> {formatValue(riskDetails.process_threat_rating)}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Компонент для отображения детального отчета\r\nconst DetailedRisks: React.FC<{ detailedRisks: DetailedRiskReport[] }> = ({ detailedRisks }) => {\r\n  console.log('DetailedRisks component received:', detailedRisks);\r\n\r\n  if (!detailedRisks || detailedRisks.length === 0) {\r\n    return <div>Нет данных для отображения.</div>;\r\n  }\r\n\r\n  // Функция для определения цвета ячейки в зависимости от статуса резервирования\r\n  const getReservationColor = (asReserved: string | undefined | null): string => {\r\n    if (!asReserved) return '#6c757d'; // серый для неизвестного статуса\r\n    const status = asReserved.toLowerCase();\r\n    if (status === 'да') return '#28a745'; // зеленый для зарезервированных\r\n    if (status === 'нет') return '#dc3545'; // красный для незарезервированных\r\n    return '#6c757d'; // серый для всех остальных случаев\r\n  };\r\n\r\n  return (\r\n    <div className=\"detailed-risks\">\r\n      <h3>Детальный отчет</h3>\r\n      \r\n      <div className=\"risks-table\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Тип влияния</th>\r\n              <th>Временные метрики</th>\r\n              <th>Визуализация метрик</th>\r\n              <th>Автопояснение</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {detailedRisks.map((risk, index) => {\r\n              // Преобразуем строковые значения в числа для временных метрик\r\n              const rtoHours = roundMetricValue(parseFloat(risk.rto_hours || '0'));\r\n              const mtpdHours = roundMetricValue(parseFloat(risk.mtpd || '0'));\r\n              const trHours = roundMetricValue(parseFloat(risk.tr || '0'));\r\n              const hasValidTimeMetrics = !isNaN(rtoHours) && !isNaN(mtpdHours) && !isNaN(trHours);\r\n              const reservationColor = getReservationColor(risk.as_reserved_in_rcod);\r\n\r\n              return (\r\n                <tr key={index}>\r\n                  <td>{formatValue(risk.impact_type)}</td>\r\n                  <td className=\"metrics-values\">\r\n                    <div className=\"metrics-container\">\r\n                      <div \r\n                        className=\"reservation-indicator\"\r\n                        style={{ backgroundColor: reservationColor }}\r\n                      ></div>\r\n                      <div className=\"metrics-content\">\r\n                        <div className=\"reservation-status\">\r\n                          АС {risk.as_reserved_in_rcod?.toLowerCase() === 'да' ? 'зарезервирована' : 'не зарезервирована'} в РЦОД\r\n                        </div>\r\n                        <div className=\"metrics-list\">\r\n                          <p><strong>TR:</strong> {formatValue(trHours)}</p>\r\n                          <p><strong>RTO:</strong> {formatValue(rtoHours)}</p>\r\n                          <p><strong>MTPD:</strong> {formatValue(mtpdHours)}</p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </td>\r\n                  <td className=\"metrics-cell\">\r\n                    {hasValidTimeMetrics && (\r\n                      <TimeMetricsVisualizer\r\n                        rto={rtoHours}\r\n                        mtpd={mtpdHours}\r\n                        tr={trHours}\r\n                      />\r\n                    )}\r\n                  </td>\r\n                  <td>{formatValue(risk.risk_assessment_explanation)}</td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Основное приложение\r\nfunction App() {\r\n  const [processes, setProcesses] = useState<Process[]>([]);\r\n  const [filteredProcesses, setFilteredProcesses] = useState<Process[]>([]);\r\n  const [selectedProcess, setSelectedProcess] = useState<Process | null>(null);\r\n  const [threats, setThreats] = useState<Threat[]>([]);\r\n  const [selectedThreat, setSelectedThreat] = useState<Threat | null>(null);\r\n  const [selectedThreatDetails, setSelectedThreatDetails] = useState<RiskDetail | null>(null);\r\n\r\n  const [detailedRisks, setDetailedRisks] = useState<DetailedRiskReport[]>([]);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  // Загрузка списка процессов при старте\r\n  useEffect(() => {\r\n    fetch('http://localhost:8000/processes')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setProcesses(data);\r\n        setFilteredProcesses(data);\r\n      })\r\n      .catch(err => setError('Не удалось загрузить список процессов.'));\r\n  }, []);\r\n\r\n  // Функция поиска по процессам\r\n  const handleProcessSearch = (query: string) => {\r\n    const lowercaseQuery = query.toLowerCase();\r\n    const filtered = processes.filter(process => \r\n      process.name.toLowerCase().includes(lowercaseQuery) ||\r\n      process.sid.toLowerCase().includes(lowercaseQuery)\r\n    );\r\n    setFilteredProcesses(filtered);\r\n  };\r\n\r\n  // Загрузка угроз при выборе процесса\r\n  useEffect(() => {\r\n    // Очищаем состояние при смене процесса\r\n    setThreats([]);\r\n    setSelectedThreat(null);\r\n    setSelectedThreatDetails(null);\r\n    setDetailedRisks([]);\r\n    setError(null);\r\n\r\n    if (selectedProcess) {\r\n      fetch(`http://localhost:8000/threats/${selectedProcess.sid}`)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          console.log('Received threats:', data);\r\n          setThreats(data || []); // Убедимся, что threats всегда массив\r\n        })\r\n        .catch(err => {\r\n          console.error('Error loading threats:', err);\r\n          setError('Не удалось загрузить угрозы для процесса.');\r\n        });\r\n    }\r\n  }, [selectedProcess]);\r\n\r\n  // Загрузка деталей при выборе угрозы\r\n  useEffect(() => {\r\n    if (selectedThreat) {\r\n      console.log('Loading details for threat:', selectedThreat);\r\n      setError(null);\r\n      \r\n      // Загружаем детали риска\r\n      fetch(`http://localhost:8000/risk-details/${selectedThreat.process_sid}?threat_type=${encodeURIComponent(selectedThreat.type)}&threat_scenario=${encodeURIComponent(selectedThreat.scenario)}`)\r\n        .then(res => {\r\n          if (!res.ok) throw new Error('Базовая информация не найдена.');\r\n          return res.json();\r\n        })\r\n        .then(data => {\r\n          console.log('Received risk details:', data);\r\n          setSelectedThreatDetails(data);\r\n        })\r\n        .catch(err => {\r\n          console.error('Error loading risk details:', err);\r\n          setError(err.message);\r\n          setSelectedThreatDetails(null);\r\n        });\r\n\r\n      // Загружаем детальный отчет\r\n      fetch(`http://localhost:8000/detailed-risk-report/${selectedThreat.process_sid}?threat_type=${encodeURIComponent(selectedThreat.type)}&threat_scenario=${encodeURIComponent(selectedThreat.scenario)}`)\r\n        .then(res => {\r\n          if (!res.ok) throw new Error('Детальный отчет не найден.');\r\n          return res.json();\r\n        })\r\n        .then(data => {\r\n          console.log('Received detailed risks:', data);\r\n          setDetailedRisks(Array.isArray(data) ? data : [data]); // Убедимся, что detailedRisks всегда массив\r\n        })\r\n        .catch(err => {\r\n          console.error('Error loading detailed risks:', err);\r\n          setError(err.message);\r\n          setDetailedRisks([]);\r\n        });\r\n    }\r\n  }, [selectedThreat]);\r\n\r\n  // Debug: log detailedRisks data to verify data presence\r\n  useEffect(() => {\r\n    console.log('Detailed Risks data:', detailedRisks);\r\n  }, [detailedRisks]);\r\n\r\n  const getRiskColor = (level: string | undefined | null): string => {\r\n    if (!level) return '#6c757d'; // Возвращаем серый цвет для undefined/null значений\r\n    \r\n    const l = level.toLowerCase();\r\n    if (l.includes('критический')) return '#dc3545';\r\n    if (l.includes('высокий')) return '#ffc107';\r\n    if (l.includes('средний')) return '#fd7e14';\r\n    if (l.includes('низкий')) return '#28a745';\r\n    return '#6c757d';\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"sidebar\">\r\n        <h2>Процессы</h2>\r\n        <ProcessSearch onSearch={handleProcessSearch} />\r\n        <div className=\"process-list\">\r\n          {filteredProcesses.map(p => (\r\n            <div \r\n              key={p.sid} \r\n              className={`process-item ${selectedProcess?.sid === p.sid ? 'selected' : ''}`}\r\n              onClick={() => setSelectedProcess(p)}\r\n            >\r\n              <div className=\"process-name\">{p.name}</div>\r\n              <div className=\"process-sid\">{p.sid}</div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"main-content\">\r\n        {selectedProcess ? (\r\n          <>\r\n            <h2>Угрозы для: {selectedProcess.name}</h2>\r\n            <div className=\"threats-container\">\r\n              {threats.map(threat => (\r\n                <div\r\n                  key={`${threat.process_sid}-${threat.type}-${threat.scenario}`}\r\n                  className={`threat-card ${\r\n                    selectedThreat?.process_sid === threat.process_sid && \r\n                    selectedThreat?.type === threat.type && \r\n                    selectedThreat?.scenario === threat.scenario \r\n                    ? 'selected' : ''\r\n                  }`}\r\n                  onClick={() => setSelectedThreat(threat)}\r\n                  style={{ \r\n                    borderLeft: `5px solid ${getRiskColor(threat.integral_risk_level)}`,\r\n                    backgroundColor: '#fff'\r\n                  }}\r\n                >\r\n                  <div className=\"threat-header\">\r\n                    <h3>{threat.type}</h3>\r\n                    <div className=\"threat-rating\" style={{\r\n                      backgroundColor: threat.threat_rating_color || getRiskColor(threat.threat_rating),\r\n                    }}>\r\n                      {threat.threat_rating || 'Нет данных'}\r\n                    </div>\r\n                  </div>\r\n                  <p className=\"threat-scenario\">{threat.scenario}</p>\r\n                  <div className=\"threat-risks\">\r\n                    <div className=\"risk-item integral-risk\">\r\n                      <strong>Интегральный риск:</strong>\r\n                      <span style={{ \r\n                        color: getRiskColor(threat.integral_risk_level),\r\n                        fontWeight: 'bold'\r\n                      }}>\r\n                        {formatValue(threat.integral_risk_level)}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"risk-item highest-risk\">\r\n                      <strong>Уровень наиболее высокого риска:</strong>\r\n                      <span style={{ color: getRiskColor(threat.highest_risk_level) }}>\r\n                        {formatValue(threat.highest_risk_level)}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <hr />\r\n            {selectedThreat && (\r\n              <div className=\"details-container\">\r\n                {error ? (\r\n                  <div className=\"error-message\">{error}</div>\r\n                ) : (\r\n                  <>\r\n                    <RiskDetails riskDetails={selectedThreatDetails} />\r\n                    <DetailedRisks detailedRisks={detailedRisks} />\r\n                  </>\r\n                )}\r\n              </div>\r\n            )}\r\n          </>\r\n        ) : (\r\n          <div className=\"placeholder\">Выберите процесс для просмотра информации.</div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}